# Generated by Django 5.2 on 2025-05-07 17:28

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="TestResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "model_name",
                    models.CharField(max_length=100, verbose_name="Model Name"),
                ),
                (
                    "test_mode",
                    models.CharField(max_length=50, verbose_name="Test Mode"),
                ),
                (
                    "sample_number",
                    models.IntegerField(default=0, verbose_name="Sample Number"),
                ),
                ("accuracy", models.FloatField(default=0.0, verbose_name="Accuracy")),
                (
                    "is_baseline",
                    models.BooleanField(default=False, verbose_name="Is Baseline"),
                ),
            ],
            options={
                "verbose_name": "Test Result",
                "verbose_name_plural": "Test Results",
                "db_table": "test_result",
            },
        ),
        migrations.CreateModel(
            name="SingleStreamData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ninety_percent_latency",
                    models.FloatField(verbose_name="Ninety Percent Latency"),
                ),
                (
                    "test_result",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="single_stream_data",
                        to="api.testresult",
                    ),
                ),
            ],
            options={
                "verbose_name": "Single Stream Data",
                "db_table": "single_stream_data",
            },
        ),
        migrations.CreateModel(
            name="ServerData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "samples_per_second",
                    models.FloatField(verbose_name="Samples per second"),
                ),
                (
                    "tokens_per_second",
                    models.FloatField(verbose_name="Tokens per second"),
                ),
                (
                    "avg_first_token_latency",
                    models.FloatField(verbose_name="Average First Token Latency"),
                ),
                (
                    "test_result",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="server_data",
                        to="api.testresult",
                    ),
                ),
            ],
            options={
                "verbose_name": "Server Data",
                "db_table": "server_data",
            },
        ),
        migrations.CreateModel(
            name="OfflineData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "samples_per_second",
                    models.FloatField(verbose_name="Samples per second"),
                ),
                (
                    "tokens_per_second",
                    models.FloatField(verbose_name="Tokens per second"),
                ),
                (
                    "test_result",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="offline_data",
                        to="api.testresult",
                    ),
                ),
            ],
            options={
                "verbose_name": "Offline Data",
                "db_table": "offline_data",
            },
        ),
        migrations.CreateModel(
            name="MultiStreamData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ninety_percent_latency",
                    models.FloatField(verbose_name="Ninety Percent Latency"),
                ),
                ("stream_num", models.IntegerField(verbose_name="Stream Number")),
                (
                    "test_result",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="multi_stream_data",
                        to="api.testresult",
                    ),
                ),
            ],
            options={
                "verbose_name": "Multi Stream Data",
                "db_table": "multi_stream_data",
            },
        ),
        migrations.CreateModel(
            name="ModelData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "avg_vision_time",
                    models.FloatField(verbose_name="Average Vision Time"),
                ),
                (
                    "avg_align_time",
                    models.FloatField(verbose_name="Average Align Time"),
                ),
                (
                    "avg_text_gen_time",
                    models.FloatField(verbose_name="Average Text Generation Time"),
                ),
                (
                    "test_result",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="model_data",
                        to="api.testresult",
                    ),
                ),
            ],
            options={
                "verbose_name": "Model Data",
                "db_table": "model_data",
            },
        ),
        migrations.CreateModel(
            name="HardwareData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("gpu_name", models.CharField(max_length=100, verbose_name="gpu_name")),
                (
                    "avg_utilization",
                    models.FloatField(verbose_name="Average Utilization"),
                ),
                ("avg_memory", models.FloatField(verbose_name="Average Memory")),
                ("total_energy", models.FloatField(verbose_name="Total Energy")),
                (
                    "test_result",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hardware_data",
                        to="api.testresult",
                    ),
                ),
            ],
            options={
                "verbose_name": "Hardware Data",
                "db_table": "hardware_data",
            },
        ),
    ]
